《服务发现》需求分析
应用场景分析：
1、多APP服务器；
2、客户端可以访问多个APP服务器中的任意一个，完成任务请求；
3、多服务器可以“热插拔”；
4、提出“注册中心”的概念；
5、服务器需在注册中心注册服务；
6、客户端从注册中心获取服务列表。

注册中心需求分析：
1、负责“服务提供者”的注册和管理(包括：注册、注销、服务查询)；
2、负责为“服务消费者”提供服务列表；
3、注册中心与服务提供者和服务消费者采用“长连接”；
4、监控服务提供者，若异常掉线，则，应注销该服务提供者信息；
5、注册中心与服务提供者的长连接，基于轮询方式；

服务提供者需求分析：
1、在注册中心注册服务、注销服务；
2、为服务消费者提供“服务”，采用RMI方式，由服务消费直接访问服务提供者，不再通过注册中心；
3、自动实现注册中心的注册过程；

服务消费者需求分析：
1、需要从注册中心获取服务提供者列表；
2、服务消费者负责“软负载均衡”；
3、若注册中心宕机，消费者应该用暂存的服务提供者列表继续完成服务访问。

基于轮询方式的长连接：
当accept()到一个服务提供者，在建立IO双工通信信道后，将其置入一个列表，以便轮询；

provider.readUTF();该方法是阻塞执行的，当有信息过来后，需要让轮询过程发现有信息；
boolean available;
需要提供消息的处理过程：dealMessage(String message)；

INetNode {
	String ip;
	int port;
}

在建立基本连接后，网络节点应向注册中心告知身份，
	1、提供者/消费者；
	2、提供者(Provider)：服务名称、IP、PORT；
	3、消费者(Costumer)：List<服务名称>、IP、PORT；

注册中心需要建立：
服务提供者池：Map<String, List<Provider>> servicePool;(服务名称为键)
服务消费者池：List<Costumer> costumerPool;
